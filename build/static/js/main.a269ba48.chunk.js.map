{"version":3,"sources":["services/persons.js","components/Filter.js","components/Numbers.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","filter","handleChange","value","onChange","Numbers","persons","removePerson","filtered","person","name","toLowerCase","includes","map","number","onClick","FormPart","text","newValue","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","message","error","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setError","useEffect","personService","initialPerson","event","target","preventDefault","newPerson","some","window","confirm","find","updatedPerson","returnedPerson","setTimeout","catch","n","concat","errorMessage","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a269ba48.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response=> response.data)\r\n}\r\nexport default { getAll, create, update, remove }","const Filter = ({ filter, handleChange }) => {\r\n    return (\r\n        <div>\r\n            filter shown with: <input\r\n                value={filter}\r\n                onChange={handleChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","\r\nconst Numbers = ({ persons, filter, removePerson }) => {\r\n\r\n  const filtered = persons.filter((person) => person.name.toLowerCase()\r\n    .includes(filter.toLowerCase()))\r\n  return (\r\n    <>\r\n      {filtered.map(person =>\r\n        <p key={person.name}>\r\n          {person.name} {person.number} \r\n          <button onClick={() => removePerson(person)}>delete</button>\r\n        </p>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Numbers","const PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.addPerson}>\r\n            <FormPart text={'name:'} newValue={props.newName} handleChange={props.handleNameChange} />\r\n            <FormPart text={'number:'} newValue={props.newNumber} handleChange={props.handleNumberChange} />\r\n            <div>\r\n                <button type='submit'>add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst FormPart = ({ text, newValue, handleChange }) => {\r\n    return (\r\n        <div>\r\n            {text} <input\r\n                value={newValue}\r\n                onChange={handleChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm","const Notification = ({ message, error }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    if (error) {\r\n        return (\r\n            <div className=\"error\">\r\n                {message}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"notification\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification\r\n","import { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport Filter from './components/Filter'\r\nimport Numbers from './components/Numbers'\r\nimport PersonForm from './components/PersonForm'\r\nimport './index.css'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPerson => {\r\n        setPersons(initialPerson)\r\n      })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber,\r\n    }\r\n\r\n    if (persons.some((person) => person.name === newName)) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n        const person = persons.find(person => person.name === newName)\r\n        const updatedPerson = {\r\n          name: person.name,\r\n          number: newNumber\r\n        }\r\n        const id = person.id\r\n        personService\r\n          .update(id, updatedPerson)\r\n          .then(returnedPerson => {\r\n            setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setError(false)\r\n            setMessage(\r\n              `Changed ${returnedPerson.name}`\r\n            )\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            }, 4000)\r\n          })\r\n          .catch(() => {\r\n            setPersons(persons.filter(n => n.id !== id))\r\n            setError(true)\r\n            setMessage(\r\n              `Information of ${person.name} has already been removed from server`\r\n            )\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            }, 5000)\r\n          })\r\n      }\r\n    } else {\r\n      personService\r\n        .create(newPerson)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setError(false)\r\n          setMessage(\r\n            `Added ${returnedPerson.name}`\r\n          )\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 4000)\r\n        })\r\n        .catch(error => {\r\n          const errorMessage = error.response.data.error\r\n          setError(true)\r\n          setMessage(\r\n            `${errorMessage}`\r\n          )\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n  }\r\n\r\n  const removePerson = (person) => {\r\n    if (window.confirm(`Delete ${person.name}`)) {\r\n      const id = person.id\r\n      personService\r\n        .remove(id)\r\n        .then(() => {\r\n          setPersons(persons.filter((person) => person.id !== id))\r\n          setError(false)\r\n          setMessage(\r\n            `Deleted ${person.name}`\r\n          )\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 4000)\r\n        })\r\n        .catch(() => {\r\n          setError(true)\r\n          setMessage(\r\n            `Information of ${person.name} has already been removed from server`\r\n          )\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n        })\r\n\r\n    }\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} error={error} />\r\n      <Filter filter={filter} handleChange={handleFilterChange} />\r\n      <h2>add a new</h2>\r\n      <PersonForm\r\n        addPerson={addPerson}\r\n        newName={newName}\r\n        handleNameChange={handleNameChange}\r\n        newNumber={newNumber}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Numbers persons={persons} filter={filter} removePerson={removePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { createRoot } from 'react-dom/client'\r\nimport App from './App'\r\n\r\n\r\ncreateRoot(document.getElementById('root')).render(\r\n  <App />\r\n)"],"sourceRoot":""}